---
import StarlightPage from "@astrojs/starlight/components/StarlightPage.astro";
import CardGrid from "../../components/CardGrid.astro";
import { getCollection } from "astro:content";

const landingSlug = "project-overview";
const basePath = import.meta.env.BASE_URL.replace(/\/$/, "");

const withBasePath = (path: string) => `${basePath}${path}`;
const frontmatter = {
  title: "IssueSuite Project Hub",
  description: "Launch IssueSuite with governance-first defaults, resilient sync automation, and observability you can trust.",
  template: "doc",
};
const landingDocs = (await getCollection("docs", ({ data }) => data.landingPages?.includes(landingSlug)))
  .sort((a, b) => {
    const aDate = a.data.pubDate ?? "";
    const bDate = b.data.pubDate ?? "";
    if (aDate === bDate) return a.data.title.localeCompare(b.data.title);
    return bDate.localeCompare(aDate);
  })
  .slice(0, 6)
  .map((entry) => {
    const docPath = entry.slug === "index" ? "/docs/" : `/docs/${entry.slug}/`;
    return {
      href: withBasePath(docPath),
      title: entry.data.title,
      description: entry.data.description ?? "",
    };
  });

const readingEntries = await getCollection("reading");
const readingList =
  readingEntries.find((entry) => entry.id === "what-were-reading" || entry.id.endsWith("/what-were-reading"))?.data.items ?? [];
---

<StarlightPage frontmatter={frontmatter} hasSidebar={false}>
  <div class="hero sl-container">
    <div class="hero__eyebrow">Project overview</div>
    <h1>Ship deterministic IssueSuite workflows</h1>
    <p>
      Launch IssueSuite with governance-first defaults, resilient sync automation, and observability you can trust.
      Explore the curated guides and recommended reading to move from scaffolding to production quickly.
    </p>
    <div class="cta-panel">
      <div class="cta-panel__copy">
        <h2>Kick off your workspace</h2>
        <p>
          Clone the repo, run <code>issuesuite init --all-extras</code>, and walk the dry-run checklist before promoting
          any changes. The featured docs below cover every step.
        </p>
      </div>
      <div class="cta-actions">
        <a class="btn" href={withBasePath("/docs/tutorials/getting-started/")}>Follow the getting started tutorial</a>
        <a class="btn secondary" href={withBasePath("/docs/reference/cli/")}>Review CLI reference</a>
      </div>
    </div>
  </div>

  {landingDocs.length > 0 ? (
    <section class="section sl-container">
      <div class="section__heading">
        <h2>Featured documentation</h2>
        <p class="section-lead">
          Start with the tutorials and guides IssueSuite teams rely on—architecture breakdowns, automation playbooks, and governance patterns.
        </p>
      </div>
      <CardGrid items={landingDocs} />
    </section>
  ) : null}

  {readingList.length > 0 ? (
    <section class="section sl-container">
      <div class="section__heading">
        <h2>Recommended reading</h2>
        <p class="section-lead">
          These resources shaped IssueSuite’s roadmap and are useful companions when rolling out large-scale automation.
        </p>
      </div>
      <ul class="reading-list">
        {readingList.map(({ title, url, source, note, paywalled }) => (
          <li>
            <a href={url} target="_blank" rel="noopener noreferrer">
              <span class="reading-title">{title}</span>
              <span class="reading-source">{source}</span>
            </a>
            {paywalled ? <span class="badge">Paywalled</span> : null}
            {note ? <p class="reading-note">{note}</p> : null}
          </li>
        ))}
      </ul>
    </section>
  ) : null}

  <section class="section sl-container">
    <div class="section__heading">
      <h2>Stay aligned</h2>
      <p class="section-lead">
        Track progress across releases and documentation milestones so your automation stays healthy and transparent.
      </p>
    </div>
    <ul class="next-steps">
      <li><a href="https://github.com/IAmJonoBo/IssueSuite/releases" target="_blank" rel="noopener noreferrer">Watch IssueSuite releases</a></li>
      <li><a href="https://github.com/IAmJonoBo/IssueSuite/projects" target="_blank" rel="noopener noreferrer">Monitor documentation roadmap</a></li>
      <li><a href={withBasePath("/docs/how-to/docs-automation/")}>Adopt the documentation automation pipeline</a></li>
    </ul>
  </section>
</StarlightPage>

<style>
  :global(:root) {
    --hub-border: var(--sl-color-gray-5);
    --hub-surface: var(--sl-color-surface-2);
    --hub-gradient: linear-gradient(135deg, var(--sl-color-accent-1), var(--sl-color-accent-2));
  }

  .hero {
    margin: var(--s-7) auto var(--s-6);
    padding: var(--s-6) var(--s-5);
    border-radius: var(--sl-border-radius-4);
    background: var(--hub-surface);
    border: 1px solid var(--hub-border);
    box-shadow: var(--sl-shadow-md);
    display: flex;
    flex-direction: column;
    gap: var(--s-4);
  }

  .hero__eyebrow {
    font-size: 0.875rem;
    font-weight: 600;
    letter-spacing: 0.08em;
    text-transform: uppercase;
    color: var(--sl-color-text-2);
  }

  .hero h1 {
    margin: 0;
  }

  .hero p {
    margin: 0;
    max-width: 70ch;
  }

  .cta-panel {
    display: grid;
    gap: var(--s-5);
    border-radius: var(--sl-border-radius-3);
    border: 1px solid var(--hub-border);
    padding: var(--s-4);
    background: var(--sl-color-surface-1);
    box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2);
  }

  .cta-panel__copy h2 {
    margin: 0 0 var(--s-2);
  }

  .cta-panel__copy p {
    margin: 0;
  }

  .cta-actions {
    display: flex;
    flex-direction: column;
    gap: var(--s-2);
  }

  .btn {
    display: inline-flex;
    justify-content: center;
    align-items: center;
    padding: var(--s-2) var(--s-4);
    border-radius: var(--sl-border-radius-2);
    text-decoration: none;
    font-weight: 600;
    color: var(--sl-color-text-1);
    background: var(--hub-gradient);
    transition: filter 0.15s ease;
  }

  .btn:hover {
    filter: brightness(1.1);
  }

  .btn.secondary {
    background: transparent;
    border: 1px solid var(--hub-border);
  }

  .section {
    margin: var(--s-7) auto;
    display: grid;
    gap: var(--s-5);
  }

  .section__heading {
    display: grid;
    gap: var(--s-2);
    max-width: 70ch;
  }

  .section-lead {
    color: var(--sl-color-text-2);
    margin: 0;
  }

  .reading-list {
    list-style: none;
    padding: 0;
    margin: 0;
    display: grid;
    gap: var(--s-3);
  }

  .reading-list li {
    border-radius: var(--sl-border-radius-3);
    border: 1px solid var(--hub-border);
    padding: var(--s-4);
    background: var(--sl-color-surface-1);
    display: grid;
    gap: var(--s-2);
  }

  .reading-list a {
    display: flex;
    justify-content: space-between;
    align-items: baseline;
    color: inherit;
    text-decoration: none;
    gap: var(--s-2);
  }

  .reading-title {
    font-weight: 600;
  }

  .reading-source {
    color: var(--sl-color-text-2);
    font-size: 0.875rem;
  }

  .reading-note {
    margin: 0;
    color: var(--sl-color-text-2);
  }

  .badge {
    display: inline-flex;
    align-items: center;
    padding: 0 var(--s-2);
    border-radius: 999px;
    font-size: 0.75rem;
    background: var(--sl-color-gray-6);
    color: var(--sl-color-text-1);
    justify-self: start;
  }

  .next-steps {
    list-style: none;
    padding: 0;
    margin: 0;
    display: grid;
    gap: var(--s-2);
  }

  .next-steps a {
    color: var(--sl-color-text-link);
    font-weight: 500;
    text-decoration: none;
  }

  @media (min-width: 768px) {
    .cta-panel {
      grid-template-columns: minmax(0, 2fr) minmax(0, 1fr);
      align-items: center;
    }

    .cta-actions {
      flex-direction: row;
    }

    .reading-list {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }

  @media (min-width: 1024px) {
    .hero {
      padding: var(--s-7);
    }

    .reading-list {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
</style>
