###############################################
# IssueSuite Standalone pyproject Template    #
# Copy this file to pyproject.toml in the new #
# extraction repository and adjust metadata.  #
###############################################

[build-system]
build-backend = "setuptools.build_meta"

requires = [ "setuptools>=68", "wheel" ]

[project] # trigger-ci
name = "issuesuite"
version = "0.1.13" # Keep in sync with issuesuite.__version__
description = "Declarative GitHub Issues automation: validate, sync, export, and report from a single ISSUES.md file"
readme = { file = "README.md", content-type = "text/markdown" }
keywords = [
  "automation",
  "cli",
  "declarative",
  "devops",
  "github",
  "issues",
  "project-management",
  "roadmap",
]
license = { text = "MIT" }
maintainers = [
  { name = "IssueSuite Maintainers", email = "maintainers@issuesuite.dev" },
]
authors = [
  { name = "IssueSuite Maintainers", email = "maintainers@issuesuite.dev" },
]
requires-python = ">=3.10"
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "Intended Audience :: System Administrators",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Software Development :: Build Tools",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Software Development :: Version Control :: Git",
  "Topic :: System :: Systems Administration",
  "Topic :: Utilities",
  "Typing :: Typed",
]
dependencies = [ "packaging>=25,<26", "pyyaml>=6,<7", "requests>=2.32,<3" ]

optional-dependencies.all = [
  "jsonschema>=4,<5",
  "keyring>=25,<26",
  "opentelemetry-api>=1.25",
  "opentelemetry-exporter-otlp>=1.25",
  "opentelemetry-sdk>=1.25",
  "psutil>=7.1",
  "pyjwt>=2.9,<3",
  "python-dotenv>=1",
]
optional-dependencies.auth = [ "keyring>=25,<26", "pyjwt>=2.9,<3" ]
optional-dependencies.dev = [
  "bandit>=1.8",
  "build>=1",
  "detect-secrets>=1.5",
  "mypy>=1.8",
  "nox>=2024.4.15",
  "opentelemetry-api>=1.25",
  "opentelemetry-exporter-otlp>=1.25",
  "opentelemetry-sdk>=1.25",
  "pip-audit>=2.7",
  "pytest>=8",
  "pytest-asyncio>=1.2",
  "pytest-cov>=4.1",
  "ruff==0.14",
  "twine>=6.2",
  "types-jsonschema>=4.23.0.20240813",
  "types-psutil>=7.0.0.20250822",
  "types-pyyaml>=6.0.12.20240917",
  "types-requests>=2.32.0.20240914",
]
optional-dependencies.env = [ "python-dotenv>=1" ]
optional-dependencies.observability = [
  "opentelemetry-api>=1.25",
  "opentelemetry-exporter-otlp>=1.25",
  "opentelemetry-sdk>=1.25",
]
optional-dependencies.performance = [ "psutil>=7.1" ]
optional-dependencies.schemas = [ "jsonschema>=4,<5" ]
optional-dependencies.vscode = [ "psutil>=7.1", "python-dotenv>=1" ]
urls."Bug Reports" = "https://github.com/IAmJonoBo/IssueSuite/issues"
urls.Changelog = "https://github.com/IAmJonoBo/IssueSuite/blob/main/CHANGELOG.md"
urls.Documentation = "https://github.com/IAmJonoBo/IssueSuite#readme"
urls.Homepage = "https://github.com/IAmJonoBo/IssueSuite"
urls.Issues = "https://github.com/IAmJonoBo/IssueSuite/issues"
urls.Repository = "https://github.com/IAmJonoBo/IssueSuite"
urls."Source Code" = "https://github.com/IAmJonoBo/IssueSuite"
scripts.issuesuite = "issuesuite.cli:main"
scripts."pip-audit" = "issuesuite.pip_audit_integration:main"

[tool.setuptools.packages.find]
where = [ "src" ]
namespaces = false

[tool.setuptools.package-data]
"issuesuite" = [ "data/*.json" ]

[tool.ruff]
target-version = "py310"

line-length = 100
extend-exclude = [
  "*/python*/logging/*",
  ".local/",
  ".local/share/uv/",
  ".venv/",
  "dist-packages/",
  "env/",
  "site-packages/",
  "venv/",
]
format.indent-style = "space"
format.quote-style = "preserve"
format.line-ending = "auto"
format.skip-magic-trailing-comma = false
lint.select = [ "B", "C4", "E", "F", "I", "N", "PL", "UP" ]
lint.ignore = [ "E501", "PLR0911", "PLR0913" ]
lint.per-file-ignores."src/issuesuite/bootstrap.py" = [
  "PLR0912",
] # JSON merge helper keeps explicit branching for clarity
lint.per-file-ignores."src/issuesuite/cli.py" = [
  "PLR0915",
] # allow higher function complexity for CLI command dispatcher
lint.per-file-ignores."src/issuesuite/config.py" = [
  "C901",
] # config loader aggregates many sections from YAML
lint.per-file-ignores."src/issuesuite/core.py" = [
  "PLR0912",
  "PLR0915",
] # parser + aggregation intentionally verbose
lint.per-file-ignores."src/issuesuite/orchestrator.py" = [
  "C901",
  "PLR0912",
  "PLR0915",
] # enrichment logic intentionally linear/complex
lint.per-file-ignores."src/issuesuite/parser.py" = [
  "C901",
] # parser functions are intentionally explicit with inline noqas
lint.per-file-ignores."tests/**/*.py" = [
  "E741",    # ambiguous variable names in tests (e.g., list comps)
  "F401",    # unused imports in tests
  "F841",    # assigned but unused in tests
  "I001",    # import order in tests
  "PLR2004", # magic values in tests are fine
]

[tool.pytest.ini_options]
addopts = [ "-q" ]
testpaths = [ "tests" ]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
exclude = [ "tests/.*" ]
strict_optional = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unreachable = true
no_implicit_optional = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [ "dotenv" ]
ignore_missing_imports = true
