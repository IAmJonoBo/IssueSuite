name: Test Package Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  test-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

      - name: Check package
        run: twine check dist/*

      - name: Test installation
        run: |
          python -m pip install dist/*.whl
          # Invoke via module to avoid PATH/script resolution issues across versions
          python -m issuesuite --help

      - name: Test pipx run from local wheel (Python 3.11 only)
        if: matrix.python-version == '3.11'
        run: |
          python -m pip install pipx
          # Run directly from the locally built wheel to avoid PyPI lookups
          # Use shell expansion to resolve the exact wheel path (avoid quoting the glob)
          # Invoke with --help (our CLI has no global --version flag)
          pipx run --spec dist/*.whl issuesuite --help
